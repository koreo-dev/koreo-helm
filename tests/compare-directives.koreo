apiVersion: koreo.dev/v1beta1
kind: ValueFunction
metadata:
  name: set-compare-test
spec:
  return:
    anIntArray:
      - 3
      - 2
      - 4
      - 5
      - 1
    aStrArray:
      - 'alpha'
      - 'dUMB'
      - 'chaRLie'
      - 'echo'
      - 'Bravo'
    anIntSet:
      - 2
      - 5
      - 3
      - 1
      - 4
    aStrSet:
      - 'Bravo'
      - 'echo'
      - 'alpha'
      - 'dUMB'
      - 'chaRLie'
---
apiVersion: koreo.dev/v1beta1
kind: FunctionTest
metadata:
  name: set-compare-test
spec:
  functionRef:
    kind: ValueFunction
    name: set-compare-test
  
  testCases:
  - expectReturn:
      anIntArray:
        - 3
        - 2
        - 4
        - 5
        - 1
      aStrArray:
        - 'alpha'
        - 'dUMB'
        - 'chaRLie'
        - 'echo'
        - 'Bravo'
      anIntSet:
        - 1
        - 2
        - 3
        - 4
        - 5
      aStrSet:
        - 'alpha'
        - 'Bravo'
        - 'chaRLie'
        - 'dUMB'
        - 'echo'
      x-koreo-compare-as-set: [anIntSet, aStrSet]
---
apiVersion: koreo.dev/v1beta1
kind: ResourceFunction
metadata:
  name: set-compare-resource-test
spec:
  apiConfig:
    apiVersion: koreo.dev/v1beta1
    kind: TriggerDummy
    name: test-case
    namespace: test-case

  resource:
    x-koreo-compare-as-set: [anIntSet, aStrSet]
    anIntArray:
      - 3
      - 2
      - 4
      - 5
      - 1
    aStrArray:
      - 'alpha'
      - 'dUMB'
      - 'chaRLie'
      - 'echo'
      - 'Bravo'
    anIntSet:
      - 2
      - 5
      - 3
      - 1
      - 4
    aStrSet:
      - 'alpha'
      - 'echo'
      - 'dUMB'
      - 'Bravo'
      - 'chaRLie'
---
apiVersion: koreo.dev/v1beta1
kind: FunctionTest
metadata:
  name: set-compare-resource-test
spec:
  functionRef:
    kind: ResourceFunction
    name: set-compare-resource-test
  
  testCases:
  - expectResource:
      apiVersion: koreo.dev/v1beta1
      kind: TriggerDummy
      metadata:
        name: test-case
        namespace: test-case
      anIntArray:
        - 3
        - 2
        - 4
        - 5
        - 1
      aStrArray:
        - 'alpha'
        - 'dUMB'
        - 'chaRLie'
        - 'echo'
        - 'Bravo'
      x-koreo-compare-as-set: [anIntSet, aStrSet]
      anIntSet:
        - 1
        - 2
        - 3
        - 4
        - 5
      aStrSet:
        - 'Bravo'
        - 'alpha'
        - 'chaRLie'
        - 'dUMB'
        - 'echo'

  - overlayResource:
      anIntSet:
        - 5
        - 1
        - 3
        - 4
        - 2
      aStrSet:
        - 'dUMB'
        - 'alpha'
        - 'chaRLie'
        - 'Bravo'
        - 'echo'

    expectOutcome:
      ok: {}

  - overlayResource:
      anIntSet:
        - 2
        - 1
        - 5
        - 4
        - 3
      aStrSet:
        - 'Bravo'
        - 'echo'
        - 'dUMB'
        - 'alpha'
        - 'chaRLie'

    expectOutcome:
      ok: {}
---
apiVersion: koreo.dev/v1beta1
kind: ValueFunction
metadata:
  name: list-as-map-compare-test
spec:
  return:
    anIntArray:
      - { "value": 3 }
      - { "value": 2 }
      - { "value": 4 }
      - { "value": 5 }
      - { "value": 1 }
    aStrArray:
      - {"value": 'alpha' }
      - {"value": 'dUMB' }
      - {"value": 'chaRLie' }
      - {"value": 'echo' }
      - {"value": 'Bravo' }
    anIntMap:
      - { "value": 2 }
      - { "value": 5 }
      - { "value": 3 }
      - { "value": 1 }
      - { "value": 4 }
    aStrMap:
      - { "value": 'Bravo', "secondary": 1  }
      - { "value": 'echo', "secondary": 1  }
      - { "value": 'alpha', "secondary": 1  }
      - { "value": 'dUMB', "secondary": 1  }
      - { "value": 'chaRLie', "secondary": 1  }
---
apiVersion: koreo.dev/v1beta1
kind: FunctionTest
metadata:
  name: list-as-map-compare-test
spec:
  functionRef:
    kind: ValueFunction
    name: list-as-map-compare-test

  testCases:
  - expectReturn:
      anIntArray:
        - { "value": 3 }
        - { "value": 2 }
        - { "value": 4 }
        - { "value": 5 }
        - { "value": 1 }
      aStrArray:
        - { "value": 'alpha' }
        - { "value": 'dUMB' }
        - { "value": 'chaRLie' }
        - { "value": 'echo' }
        - { "value": 'Bravo' }

      x-koreo-compare-as-map:
        anIntMap: [value]
        aStrMap: [value, secondary]
      anIntMap:
        - { "value": 1 }
        - { "value": 2 }
        - { "value": 3 }
        - { "value": 4 }
        - { "value": 5 }
      aStrMap:
        - { "value": 'alpha', "secondary": 1 }
        - { "value": 'Bravo', "secondary": 1  }
        - { "value": 'chaRLie', "secondary": 1  }
        - { "value": 'dUMB', "secondary": 1  }
        - { "value": 'echo', "secondary": 1  }
---
apiVersion: koreo.dev/v1beta1
kind: ResourceFunction
metadata:
  name: list-as-map-compare-test-resource
spec:
  apiConfig:
    apiVersion: koreo.dev/v1beta1
    kind: TriggerDummy
    name: test-case
    namespace: test-case

  resource:
    anIntArray:
      - { "value": 3 }
      - { "value": 2 }
      - { "value": 4 }
      - { "value": 5 }
      - { "value": 1 }
    aStrArray:
      - {"value": 'alpha' }
      - {"value": 'dUMB' }
      - {"value": 'chaRLie' }
      - {"value": 'echo' }
      - {"value": 'Bravo' }

    x-koreo-compare-as-map:
      anIntMap: [value]
      aStrMap: [value, secondary]
    anIntMap:
      - { "value": 2 }
      - { "value": 5 }
      - { "value": 3 }
      - { "value": 1 }
      - { "value": 4 }
    aStrMap:
      - { "value": 'Bravo', "secondary": 1  }
      - { "value": 'echo', "secondary": 1  }
      - { "value": 'alpha', "secondary": 1  }
      - { "value": 'dUMB', "secondary": 1  }
      - { "value": 'chaRLie', "secondary": 1  }
---
apiVersion: koreo.dev/v1beta1
kind: FunctionTest
metadata:
  name: list-as-map-compare-test-resource
spec:
  functionRef:
    kind: ResourceFunction
    name: list-as-map-compare-test-resource

  testCases:
  - expectResource:
      apiVersion: koreo.dev/v1beta1
      kind: TriggerDummy
      metadata:
        name: test-case
        namespace: test-case
      anIntArray:
        - { "value": 3 }
        - { "value": 2 }
        - { "value": 4 }
        - { "value": 5 }
        - { "value": 1 }
      aStrArray:
        - { "value": 'alpha' }
        - { "value": 'dUMB' }
        - { "value": 'chaRLie' }
        - { "value": 'echo' }
        - { "value": 'Bravo' }

      x-koreo-compare-as-map:
        anIntMap: [value]
        aStrMap: [value, secondary]
      anIntMap:
        - { "value": 1 }
        - { "value": 2 }
        - { "value": 3 }
        - { "value": 4 }
        - { "value": 5 }
      aStrMap:
        - { "value": 'alpha', "secondary": 1 }
        - { "value": 'chaRLie', "secondary": 1  }
        - { "value": 'dUMB', "secondary": 1  }
        - { "value": 'Bravo', "secondary": 1  }
        - { "value": 'echo', "secondary": 1  }

  - overlayResource:
      anIntMap:
        - { "value": 4 }
        - { "value": 3 }
        - { "value": 2 }
        - { "value": 5 }
        - { "value": 1 }
      aStrMap:
        - { "value": 'echo', "secondary": 1  }
        - { "value": 'alpha', "secondary": 1 }
        - { "value": 'dUMB', "secondary": 1  }
        - { "value": 'Bravo', "secondary": 1  }
        - { "value": 'chaRLie', "secondary": 1  }

    expectOutcome:
      ok: {}

  - overlayResource:
      anIntMap:
        - { "value": 3 }
        - { "value": 1 }
        - { "value": 5 }
        - { "value": 4 }
        - { "value": 2 }
      aStrMap:
        - { "value": 'alpha', "secondary": 1 }
        - { "value": 'dUMB', "secondary": 1  }
        - { "value": 'echo', "secondary": 1  }
        - { "value": 'Bravo', "secondary": 1  }
        - { "value": 'chaRLie', "secondary": 1  }

    expectOutcome:
      ok: {}
---
apiVersion: koreo.dev/v1beta1
kind: ResourceTemplate
metadata:
  name: template-list-as-set
  namespace: default
spec:
  template:
    apiVersion: koreo.dev/v1beta1
    kind: TestDummy
    spec:
      x-koreo-compare-as-set: [list]
      list:
        - 9
        - 7
        - 1
        - 8
---
apiVersion: koreo.dev/v1beta1
kind: ResourceTemplate
metadata:
  name: template-list-as-map
  namespace: default
spec:
  template:
    apiVersion: koreo.dev/v1beta1
    kind: TestDummy
    spec:
      x-koreo-compare-as-map:
        collection:
        - name
      collection:
        - name: four
          value: 4
        - name: one
          value: 1
        - name: three
          value: 3
        - name: two
          value: 2
---
apiVersion: koreo.dev/v1beta1
kind: ResourceTemplate
metadata:
  name: template-both-special-compares
  namespace: default
spec:
  template:
    apiVersion: koreo.dev/v1beta1
    kind: TestDummy
    spec:
      x-koreo-compare-as-set: [list]
      x-koreo-compare-as-map:
        collection:
        - name
      list:
        - 7
        - 9
        - 8
        - 1
      collection:
        - name: two
          value: 2
        - name: one
          value: 1
        - name: four
          value: 4
        - name: three
          value: 3
---
apiVersion: koreo.dev/v1beta1
kind: ResourceTemplate
metadata:
  name: template-normal-array-compares
  namespace: default
spec:
  template:
    apiVersion: koreo.dev/v1beta1
    kind: TestDummy
    spec:
      list:
        - 1
        - 7
        - 8
        - 9
      collection:
        - name: one
          value: 1
        - name: two
          value: 2
        - name: three
          value: 3
        - name: four
          value: 4
---
apiVersion: koreo.dev/v1beta1
kind: ResourceFunction
metadata:
  name: templates-with-special-compares
spec:
  apiConfig:
    apiVersion: koreo.dev/v1beta1
    kind: TriggerDummy
    name: test-case
    namespace: test-case

  resourceTemplateRef:
    name: ="template-" + inputs.test


---
apiVersion: koreo.dev/v1beta1
kind: FunctionTest
metadata:
  name: templates-with-list-as-set
spec:
  functionRef:
    kind: ResourceFunction
    name: templates-with-special-compares

  inputs:
    test: list-as-set

  testCases:
  - label: Use directive so that compare order does not matter
    expectResource:
      apiVersion: koreo.dev/v1beta1
      kind: TriggerDummy
      metadata:
        name: test-case
        namespace: test-case
      spec:
        x-koreo-compare-as-set: [list]
        list:
          - 1
          - 7
          - 8
          - 9

  - label: Update the resource with a different order
    overlayResource:
      spec:
        list:
          - 7
          - 9
          - 1
          - 8

    expectOutcome:
      ok: {}
---
apiVersion: koreo.dev/v1beta1
kind: FunctionTest
metadata:
  name: templates-with-list-as-map
spec:
  functionRef:
    kind: ResourceFunction
    name: templates-with-special-compares

  inputs:
    test: list-as-map

  testCases:
  - label: Use directive so that compare order does not matter
    expectResource:
      apiVersion: koreo.dev/v1beta1
      kind: TriggerDummy
      metadata:
        name: test-case
        namespace: test-case
      spec:
        x-koreo-compare-as-map:
          collection:
          - name
        collection:
          - name: one
            value: 1
          - name: two
            value: 2
          - name: three
            value: 3
          - name: four
            value: 4

  - label: Update the resource with a different order
    overlayResource:
      spec:
        collection:
          - name: two
            value: 2
          - name: four
            value: 4
          - name: three
            value: 3
          - name: one
            value: 1

    expectOutcome:
      ok: {}
---
apiVersion: koreo.dev/v1beta1
kind: FunctionTest
metadata:
  name: templates-with-both-special-compares
spec:
  functionRef:
    kind: ResourceFunction
    name: templates-with-special-compares

  inputs:
    test: both-special-compares

  testCases:
  - label: Use directives so that compare order does not matter
    expectResource:
      apiVersion: koreo.dev/v1beta1
      kind: TriggerDummy
      metadata:
        name: test-case
        namespace: test-case
      spec:
        x-koreo-compare-as-set: [list]
        list:
          - 1
          - 7
          - 8
          - 9
        x-koreo-compare-as-map:
          collection:
          - name
        collection:
          - name: one
            value: 1
          - name: two
            value: 2
          - name: three
            value: 3
          - name: four
            value: 4

  - label: Update the resource with a different order
    overlayResource:
      spec:
        list:
          - 7
          - 1
          - 9
          - 8
        collection:
          - name: two
            value: 2
          - name: four
            value: 4
          - name: three
            value: 3
          - name: one
            value: 1

    expectOutcome:
      ok: {}
---
apiVersion: koreo.dev/v1beta1
kind: FunctionTest
metadata:
  name: templates-with-normal-array-compares
spec:
  functionRef:
    kind: ResourceFunction
    name: templates-with-special-compares

  inputs:
    test: normal-array-compares

  testCases:
  - label: Can still use directives so that compare order does not matter
    expectResource:
      apiVersion: koreo.dev/v1beta1
      kind: TriggerDummy
      metadata:
        name: test-case
        namespace: test-case
      spec:
        x-koreo-compare-as-set: [list]
        x-koreo-compare-as-map:
          collection:
          - name
        list:
          - 1
          - 7
          - 8
          - 9
        collection:
          - name: one
            value: 1
          - name: two
            value: 2
          - name: three
            value: 3
          - name: four
            value: 4

  - label: It will be stable once the order matches
    expectOutcome:
      ok: {}

  - variant: true
    label: But the resource will correct if a list (set) does not match
    overlayResource:
      spec:
        list:
          - 7
          - 1
          - 9
          - 8
        collection:
          - name: two
            value: 2
          - name: four
            value: 4
          - name: three
            value: 3
          - name: one
            value: 1

    expectResource:
      apiVersion: koreo.dev/v1beta1
      kind: TriggerDummy
      metadata:
        name: test-case
        namespace: test-case
      spec:
        list:
          - 1
          - 7
          - 8
          - 9
        collection:
          - name: one
            value: 1
          - name: two
            value: 2
          - name: three
            value: 3
          - name: four
            value: 4

  - variant: true
    label: Or if a collection (map) does not match
    overlayResource:
      spec:
        list:
          - 1
          - 7
          - 8
          - 9
        collection:
          - name: two
            value: 2
          - name: four
            value: 4
          - name: three
            value: 3
          - name: one
            value: 1

    expectResource:
      apiVersion: koreo.dev/v1beta1
      kind: TriggerDummy
      metadata:
        name: test-case
        namespace: test-case
      spec:
        list:
          - 1
          - 7
          - 8
          - 9
        collection:
          - name: one
            value: 1
          - name: two
            value: 2
          - name: three
            value: 3
          - name: four
            value: 4

